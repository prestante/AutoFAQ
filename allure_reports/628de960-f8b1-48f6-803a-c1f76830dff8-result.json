{"name": "test_post_message_without_body", "status": "failed", "statusDetails": {"message": "AssertionError: Намеренная ошибка\nassert 404 == 200\n +  where 404 = <Response [404 Not Found]>.status_code", "trace": "@pytest.mark.asyncio\n    async def test_post_message_without_body():\n        session_id = str(uuid.uuid4())\n        headers = {\n            \"Cookie\": f\"session-id={session_id}\"\n        }\n    \n        async with httpx.AsyncClient() as client:\n            response = await client.post(BASE_URL, headers=headers)\n    \n>       assert response.status_code == 200, 'Намеренная ошибка'\nE       AssertionError: Намеренная ошибка\nE       assert 404 == 200\nE        +  where 404 = <Response [404 Not Found]>.status_code\n\ntests/backend/test_api.py:69: AssertionError"}, "start": 1734614493468, "stop": 1734614493736, "uuid": "1ffd7e46-59d9-41f7-871c-49744d7515e7", "historyId": "c8c8b8039f9322d75aebe79eedaae429", "testCaseId": "c8c8b8039f9322d75aebe79eedaae429", "fullName": "tests.backend.test_api#test_post_message_without_body", "labels": [{"name": "tag", "value": "asyncio"}, {"name": "parentSuite", "value": "tests.backend"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "Mac"}, {"name": "thread", "value": "17495-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.backend.test_api"}]}